#! /bin/bash
#
# chromad          Start/Stop the chroma alert daemon.
#
# chkconfig: 345 90 60
# description: chromad is a daemon written in C that monitors a network \
#              attached Chromatec AM-xx. An alarm configuration file is \
#              loaded when the daemon starts that specifies what channels \
#              the daemon should monitor and how much silence to accept \
#              before sending a notification email.
# processname: chromad
# config: /home/lleweli/cromad/alert-all.conf
# pidfile: /var/run/cromad.pid

# Source function library.
. /etc/init.d/functions

prog="chromad"

# Where the daemon resides
daemon_dir=/usr/local/bin

# Configuration directory
config_dir=/etc/chromad

# Log directory
log_dir=/var/log/chromad

# Temporary alert list file
tmp_file=/tmp/cromad-startup.tmp

# What processes to start in this file
#startprocs=start-procs.conf

bin=$daemon_dir/$prog

#cd $daemon_dir

processLine() {
	line="$@"
	$bin -v -v -c $line
	RETVAL=$?
}

start() {
	echo -n $"Starting $prog: "
	STARTS=0
	FAILS=0

	# Get a list of the alert files in the config dir
	ls $config_dir/alert-*.conf > $tmp_file

	if [ ! -f $tmp_file ]; then
		echo "$tmp_file: does not exist"
		exit 1
	elif [ ! -r $tmp_file ]; then
		echo "$tmp_file: can not be read"
		exit 2
	fi

	# Get each line of the temporary file
	exec 3<&0
	exec 0<$tmp_file
	while read line
	do
		processLine $line
		if [ $? -eq 0 ]; then
			STARTS=`expr $STARTS + 1`
			echo -n "$STARTS "
		else
			FAILS=`expr $FAILS + 1`
		fi
	done
	exec 0<&3

	# Remove the temporary file
	rm $tmp_file

	# Call the status function based on attempts
	if [ $STARTS -eq 0 ]; then
		failure
		RETVAL=1
	elif [ $FAILS -gt 0 ]; then
		warning
		RETVAL=2
	else
		success
		RETVAL=0
	fi
	echo

	return $RETVAL
}

stop() {
	echo -n $"Stopping $prog: "

	# Stop the data streams
	$bin -h > /dev/null

	# Kill the local processes
	cromad_pid=$(pgrep -ofx "${bin}.*")
	while [ $cromad_pid -ne $$ ]
	do
		kill -SIGTERM $cromad_pid
		RETVAL=$?
		sleep 1
		if [ $RETVAL -eq 0 ]; then
			echo -n "$cromad_pid "
		fi
		cromad_pid=$(pgrep -ofx "${bin}.*")
	done

	success

	echo

	return $RETVAL
}

restart() {
  	stop
	start
}

case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  restart)
  	restart
	;;
  *)
	echo $"Usage: $0 {start|stop|restart}"
	exit 1
esac
